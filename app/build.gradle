apply plugin: 'com.android.application'

static def getPropertyByKey(String name) {
    def propertiesFile = new File('local.properties')
    if (propertiesFile.exists()) {
        def properties = new Properties()
        properties.load(new FileInputStream(propertiesFile))
        def result = properties.getProperty(name)
        if (result == null) {
            throw new MissingResourceException("Property " + name +
                    " does not exist. See README for details")
        } else {
            return "\"" + properties.getProperty(name) + "\""
        }
    } else {
        throw new MissingResourceException("File local.properties does not exist")
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "com.rabbit.green.movies.app"
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 2
        versionName "1.1.0"
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        it.buildConfigField("String", "API_KEY", getPropertyByKey("api_key"))
        it.buildConfigField("String", "BASE_URL", "\"http://api.themoviedb.org/\"")
        it.buildConfigField("String", "BASE_POSTER_URL", "\"http://image.tmdb.org/t/p/\"")
    }
}

dependencies {
    ext {
        retrofit = '2.3.0'
        moshi = '1.5.0'
        mockitoUnit = '2.13.0'
        okHttpClient = '3.9.1'
        jUnit = '4.12'
        supportLib = '27.1.0'
        rxJava = '2.1.6'
        rxAndroid = '2.0.1'
        rxRetrofitAdapter = '1.0.0'
        dagger = '2.14.1'
        parceler = '1.1.10'
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:appcompat-v7:$supportLib"
    implementation "com.android.support:support-v4:$supportLib"
    implementation "com.android.support:support-annotations:$supportLib"
    implementation "com.android.support:design:$supportLib"
    implementation "com.android.support:recyclerview-v7:$supportLib"

    implementation 'com.squareup.picasso:picasso:2.5.2'

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"

    implementation "io.reactivex.rxjava2:rxjava:$rxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxRetrofitAdapter"

    implementation "com.squareup.moshi:moshi:$moshi"

    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger"

    implementation "com.google.dagger:dagger:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"

    implementation "org.parceler:parceler-api:$parceler"
    annotationProcessor "org.parceler:parceler:$parceler"

    testImplementation "org.mockito:mockito-core:$mockitoUnit"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpClient"
    testImplementation "junit:junit:$jUnit"
}
